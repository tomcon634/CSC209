Script started on Fri 23 Mar 2018 10:38:29 AM EDT
]0;connol76@b2210-16:/h/u14/c6/01/connol76/Desktop/connol76/lab10b2210-16:~/Desktop/connol76/lab10$ gdb bufserver [K
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break set_up_server_socket
Breakpoint 1 at 0x400e44: file socket.c, line 35.
(gdb) next
The program is not being run.
(gdb) run
Starting program: /h/u14/c6/01/connol76/Desktop/connol76/lab10/bufserver 

Breakpoint 1, set_up_server_socket (self=0x603010, num_queue=5) at socket.c:35
35	int set_up_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) next
36	    int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) next
37	    if (soc < 0) {
(gdb) next
44	    int on = 1;
(gdb) next
45	    int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) next
47	    if (status < 0) {
(gdb) next
53	    if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) ./[K[Knext
60	    if (listen(soc, num_queue) < 0) {
(gdb) next
66	    return soc;
(gdb) next
67	}
(gdb) next
main () at bufserver.c:27
27	        int fd = accept_connection(listenfd);
(gdb) next[Knext
Waiting for a new connection...
New connection accepted from 127.0.0.1:56272
28	        if (fd < 0) {
(gdb) next
33	        char buf[BUFSIZE] = {'\0'};
(gdb) next
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) next
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) next
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41	            inbuf = strlen(buf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
58	                buf[where-2] = '\0';
(gdb) next
60	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time
66	                inbuf -= where;
(gdb) next
75	                memmove(buf, &(buf[where]), where);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79	            after = &(buf[inbuf]);
(gdb) next
80	            room = sizeof(buf) - inbuf;
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41	            inbuf = strlen(buf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
58	                buf[where-2] = '\0';
(gdb) next
60	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time
66	                inbuf -= where;
(gdb) next
75	                memmove(buf, &(buf[where]), where);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79	            after = &(buf[inbuf]);
(gdb) next
80	            room = sizeof(buf) - inbuf;
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41	            inbuf = strlen(buf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
58	                buf[where-2] = '\0';
(gdb) next
60	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time
66	                inbuf -= where;
(gdb) next
75	                memmove(buf, &(buf[where]), where);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79	            after = &(buf[inbuf]);
(gdb) next
80	            room = sizeof(buf) - inbuf;
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41	            inbuf = strlen(buf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
58	                buf[where-2] = '\0';
(gdb) next
60	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time
66	                inbuf -= where;
(gdb) next
75	                memmove(buf, &(buf[where]), where);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79	            after = &(buf[inbuf]);
(gdb) next
80	            room = sizeof(buf) - inbuf;
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
41	            inbuf = strlen(buf);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
58	                buf[where-2] = '\0';
(gdb) next
60	                printf("Next message: %s\n", buf);
(gdb) next
Next message: A stitch in time
66	                inbuf -= where;
(gdb) next
75	                memmove(buf, &(buf[where]), where);
(gdb) next
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) next
79	            after = &(buf[inbuf]);
(gdb) next
80	            room = sizeof(buf) - inbuf;
(gdb) next
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) next
82	        close(fd);
(gdb) next
27	        int fd = accept_connection(listenfd);
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

	Inferior 1 [process 351] will be killed.

Quit anyway? (y or n) y
]0;connol76@b2210-16:/h/u14/c6/01/connol76/Desktop/connol76/lab10b2210-16:~/Desktop/connol76/lab10$ exit
exit

Script done on Fri 23 Mar 2018 10:55:03 AM EDT
